// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ptypes/dlib.proto

package ptypes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Timestamp from public import google/protobuf/timestamp.proto
type Timestamp = timestamp.Timestamp

// ErrorReponse messages contain information about error conditions.
type ErrorResponse struct {
	Code                 int64                `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg                  string               `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{0}
}
func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (dst *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(dst, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrorResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ErrorResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// ResultReponse messages contain the result of a single operation.
type ResultReponse struct {
	Code                 string               `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Val                  string               `protobuf:"bytes,2,opt,name=Val,proto3" json:"Val,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Num                  int64                `protobuf:"varint,4,opt,name=Num,proto3" json:"Num,omitempty"`
	Msg                  string               `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err                  *ErrorResponse       `protobuf:"bytes,6,opt,name=Err,proto3" json:"Err,omitempty"`
	Data                 string               `protobuf:"bytes,7,opt,name=Data,proto3" json:"Data,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,8,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResultReponse) Reset()         { *m = ResultReponse{} }
func (m *ResultReponse) String() string { return proto.CompactTextString(m) }
func (*ResultReponse) ProtoMessage()    {}
func (*ResultReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{1}
}
func (m *ResultReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultReponse.Unmarshal(m, b)
}
func (m *ResultReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultReponse.Marshal(b, m, deterministic)
}
func (dst *ResultReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultReponse.Merge(dst, src)
}
func (m *ResultReponse) XXX_Size() int {
	return xxx_messageInfo_ResultReponse.Size(m)
}
func (m *ResultReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultReponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResultReponse proto.InternalMessageInfo

func (m *ResultReponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ResultReponse) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *ResultReponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ResultReponse) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ResultReponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ResultReponse) GetErr() *ErrorResponse {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ResultReponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *ResultReponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// DeleteResponse meassages represent responses to delete requests.
type DeleteResponse struct {
	Num                  int64    `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{2}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(dst, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

// PermRequest messages represent permission request values.
type PermRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermRequest) Reset()         { *m = PermRequest{} }
func (m *PermRequest) String() string { return proto.CompactTextString(m) }
func (*PermRequest) ProtoMessage()    {}
func (*PermRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{3}
}
func (m *PermRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermRequest.Unmarshal(m, b)
}
func (m *PermRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermRequest.Marshal(b, m, deterministic)
}
func (dst *PermRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermRequest.Merge(dst, src)
}
func (m *PermRequest) XXX_Size() int {
	return xxx_messageInfo_PermRequest.Size(m)
}
func (m *PermRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PermRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PermRequest proto.InternalMessageInfo

func (m *PermRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PermRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PermRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// PermResponse messages represent permission response values.
type PermResponse struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermResponse) Reset()         { *m = PermResponse{} }
func (m *PermResponse) String() string { return proto.CompactTextString(m) }
func (*PermResponse) ProtoMessage()    {}
func (*PermResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{4}
}
func (m *PermResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermResponse.Unmarshal(m, b)
}
func (m *PermResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermResponse.Marshal(b, m, deterministic)
}
func (dst *PermResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermResponse.Merge(dst, src)
}
func (m *PermResponse) XXX_Size() int {
	return xxx_messageInfo_PermResponse.Size(m)
}
func (m *PermResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PermResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PermResponse proto.InternalMessageInfo

func (m *PermResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PermResponse) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PermResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// TokenRequest messages represent token request values.
type TokenRequest struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Token                string               `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	UserID               int64                `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Created,proto3" json:"Created,omitempty"`
	Expires              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Expires,proto3" json:"Expires,omitempty"`
	Start                *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Start,proto3" json:"Start,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,7,opt,name=End,proto3" json:"End,omitempty"`
	Old                  *timestamp.Timestamp `protobuf:"bytes,8,opt,name=Old,proto3" json:"Old,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TokenRequest) Reset()         { *m = TokenRequest{} }
func (m *TokenRequest) String() string { return proto.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()    {}
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{5}
}
func (m *TokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenRequest.Unmarshal(m, b)
}
func (m *TokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenRequest.Marshal(b, m, deterministic)
}
func (dst *TokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenRequest.Merge(dst, src)
}
func (m *TokenRequest) XXX_Size() int {
	return xxx_messageInfo_TokenRequest.Size(m)
}
func (m *TokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenRequest proto.InternalMessageInfo

func (m *TokenRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *TokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *TokenRequest) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *TokenRequest) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *TokenRequest) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *TokenRequest) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *TokenRequest) GetOld() *timestamp.Timestamp {
	if m != nil {
		return m.Old
	}
	return nil
}

// TokenResponse messages represent token response values.
type TokenResponse struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Token                string               `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	UserID               int64                `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Created,proto3" json:"Created,omitempty"`
	Expires              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Expires,proto3" json:"Expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TokenResponse) Reset()         { *m = TokenResponse{} }
func (m *TokenResponse) String() string { return proto.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()    {}
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{6}
}
func (m *TokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenResponse.Unmarshal(m, b)
}
func (m *TokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenResponse.Marshal(b, m, deterministic)
}
func (dst *TokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenResponse.Merge(dst, src)
}
func (m *TokenResponse) XXX_Size() int {
	return xxx_messageInfo_TokenResponse.Size(m)
}
func (m *TokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenResponse proto.InternalMessageInfo

func (m *TokenResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *TokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenResponse) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *TokenResponse) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *TokenResponse) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

// UserRequest messages represent user request values.
type UserRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Pass                 string   `protobuf:"bytes,3,opt,name=Pass,proto3" json:"Pass,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{7}
}
func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (dst *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(dst, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UserRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

func (m *UserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// UserMessage messages represent user response values.
type UserResponse struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Pass                 string   `protobuf:"bytes,3,opt,name=Pass,proto3" json:"Pass,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{8}
}
func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (dst *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(dst, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserResponse) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UserResponse) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

func (m *UserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// UserPermRequest messages represent user permission request values.
type UserPermRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID               int64    `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PermID               int64    `protobuf:"varint,3,opt,name=PermID,proto3" json:"PermID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPermRequest) Reset()         { *m = UserPermRequest{} }
func (m *UserPermRequest) String() string { return proto.CompactTextString(m) }
func (*UserPermRequest) ProtoMessage()    {}
func (*UserPermRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{9}
}
func (m *UserPermRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPermRequest.Unmarshal(m, b)
}
func (m *UserPermRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPermRequest.Marshal(b, m, deterministic)
}
func (dst *UserPermRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPermRequest.Merge(dst, src)
}
func (m *UserPermRequest) XXX_Size() int {
	return xxx_messageInfo_UserPermRequest.Size(m)
}
func (m *UserPermRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPermRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserPermRequest proto.InternalMessageInfo

func (m *UserPermRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserPermRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserPermRequest) GetPermID() int64 {
	if m != nil {
		return m.PermID
	}
	return 0
}

// UserPermResponse messages represent user permission response values.
type UserPermResponse struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID               int64    `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PermID               int64    `protobuf:"varint,3,opt,name=PermID,proto3" json:"PermID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPermResponse) Reset()         { *m = UserPermResponse{} }
func (m *UserPermResponse) String() string { return proto.CompactTextString(m) }
func (*UserPermResponse) ProtoMessage()    {}
func (*UserPermResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{10}
}
func (m *UserPermResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPermResponse.Unmarshal(m, b)
}
func (m *UserPermResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPermResponse.Marshal(b, m, deterministic)
}
func (dst *UserPermResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPermResponse.Merge(dst, src)
}
func (m *UserPermResponse) XXX_Size() int {
	return xxx_messageInfo_UserPermResponse.Size(m)
}
func (m *UserPermResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPermResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserPermResponse proto.InternalMessageInfo

func (m *UserPermResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserPermResponse) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserPermResponse) GetPermID() int64 {
	if m != nil {
		return m.PermID
	}
	return 0
}

// AuthRequest messages represent requests to authenticate tokens.
type AuthRequest struct {
	Token                *TokenRequest `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Perm                 *PermRequest  `protobuf:"bytes,2,opt,name=Perm,proto3" json:"Perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{11}
}
func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (dst *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(dst, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetToken() *TokenRequest {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *AuthRequest) GetPerm() *PermRequest {
	if m != nil {
		return m.Perm
	}
	return nil
}

// AuthResponse messages represent responses to authentication requests.
type AuthResponse struct {
	Ok                   bool          `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	User                 *UserResponse `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Perm                 *PermResponse `protobuf:"bytes,3,opt,name=Perm,proto3" json:"Perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dlib_d3d99ff7dc552fce, []int{12}
}
func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (dst *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(dst, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AuthResponse) GetUser() *UserResponse {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AuthResponse) GetPerm() *PermResponse {
	if m != nil {
		return m.Perm
	}
	return nil
}

func init() {
	proto.RegisterType((*ErrorResponse)(nil), "dlib.ErrorResponse")
	proto.RegisterType((*ResultReponse)(nil), "dlib.ResultReponse")
	proto.RegisterType((*DeleteResponse)(nil), "dlib.DeleteResponse")
	proto.RegisterType((*PermRequest)(nil), "dlib.PermRequest")
	proto.RegisterType((*PermResponse)(nil), "dlib.PermResponse")
	proto.RegisterType((*TokenRequest)(nil), "dlib.TokenRequest")
	proto.RegisterType((*TokenResponse)(nil), "dlib.TokenResponse")
	proto.RegisterType((*UserRequest)(nil), "dlib.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "dlib.UserResponse")
	proto.RegisterType((*UserPermRequest)(nil), "dlib.UserPermRequest")
	proto.RegisterType((*UserPermResponse)(nil), "dlib.UserPermResponse")
	proto.RegisterType((*AuthRequest)(nil), "dlib.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "dlib.AuthResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	// GetTokens returns a stream of tokens from the database.
	GetTokens(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (Auth_GetTokensClient, error)
	// PostTokens serializes a stream of tokens to the database.
	SaveTokens(ctx context.Context, opts ...grpc.CallOption) (Auth_SaveTokensClient, error)
	// DeleteTokens deletes tokens from the database.
	DeleteTokens(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// GetUsers returns a stream of users from the database.
	GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (Auth_GetUsersClient, error)
	// PostUsers serializes a stream of users to the database.
	SaveUsers(ctx context.Context, opts ...grpc.CallOption) (Auth_SaveUsersClient, error)
	// DeleteUsers deletes users from the database.
	DeleteUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// GetPerms returns a stream of permissions from the database.
	GetPerms(ctx context.Context, in *PermRequest, opts ...grpc.CallOption) (Auth_GetPermsClient, error)
	// PostPerms serializes a stream of permissions to the database.
	SavePerms(ctx context.Context, opts ...grpc.CallOption) (Auth_SavePermsClient, error)
	// DeletePerms deletes permissions from the database.
	DeletePerms(ctx context.Context, in *PermRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// GetUserPerms returns a stream of user permissions from the database.
	GetUserPerms(ctx context.Context, in *UserPermRequest, opts ...grpc.CallOption) (Auth_GetUserPermsClient, error)
	// PostUserPerms serializes a stream of user permissions to the database.
	SaveUserPerms(ctx context.Context, opts ...grpc.CallOption) (Auth_SaveUserPermsClient, error)
	// DeleteUserPerms deletes user permissions from the database.
	DeleteUserPerms(ctx context.Context, in *UserPermRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Login authenticates a provided user and creates a new token.
	Login(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*TokenResponse, error)
	// Logout destroys the provided token.
	Logout(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error)
	// Auth authenticates a provided token and returns a user value.
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) GetTokens(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (Auth_GetTokensClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[0], "/dlib.Auth/GetTokens", opts...)
	if err != nil {
		return nil, err
	}
	x := &authGetTokensClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Auth_GetTokensClient interface {
	Recv() (*TokenResponse, error)
	grpc.ClientStream
}

type authGetTokensClient struct {
	grpc.ClientStream
}

func (x *authGetTokensClient) Recv() (*TokenResponse, error) {
	m := new(TokenResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) SaveTokens(ctx context.Context, opts ...grpc.CallOption) (Auth_SaveTokensClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[1], "/dlib.Auth/SaveTokens", opts...)
	if err != nil {
		return nil, err
	}
	x := &authSaveTokensClient{stream}
	return x, nil
}

type Auth_SaveTokensClient interface {
	Send(*TokenRequest) error
	Recv() (*TokenResponse, error)
	grpc.ClientStream
}

type authSaveTokensClient struct {
	grpc.ClientStream
}

func (x *authSaveTokensClient) Send(m *TokenRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *authSaveTokensClient) Recv() (*TokenResponse, error) {
	m := new(TokenResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) DeleteTokens(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/DeleteTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (Auth_GetUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[2], "/dlib.Auth/GetUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &authGetUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Auth_GetUsersClient interface {
	Recv() (*UserResponse, error)
	grpc.ClientStream
}

type authGetUsersClient struct {
	grpc.ClientStream
}

func (x *authGetUsersClient) Recv() (*UserResponse, error) {
	m := new(UserResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) SaveUsers(ctx context.Context, opts ...grpc.CallOption) (Auth_SaveUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[3], "/dlib.Auth/SaveUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &authSaveUsersClient{stream}
	return x, nil
}

type Auth_SaveUsersClient interface {
	Send(*UserRequest) error
	Recv() (*UserResponse, error)
	grpc.ClientStream
}

type authSaveUsersClient struct {
	grpc.ClientStream
}

func (x *authSaveUsersClient) Send(m *UserRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *authSaveUsersClient) Recv() (*UserResponse, error) {
	m := new(UserResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) DeleteUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/DeleteUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetPerms(ctx context.Context, in *PermRequest, opts ...grpc.CallOption) (Auth_GetPermsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[4], "/dlib.Auth/GetPerms", opts...)
	if err != nil {
		return nil, err
	}
	x := &authGetPermsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Auth_GetPermsClient interface {
	Recv() (*PermResponse, error)
	grpc.ClientStream
}

type authGetPermsClient struct {
	grpc.ClientStream
}

func (x *authGetPermsClient) Recv() (*PermResponse, error) {
	m := new(PermResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) SavePerms(ctx context.Context, opts ...grpc.CallOption) (Auth_SavePermsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[5], "/dlib.Auth/SavePerms", opts...)
	if err != nil {
		return nil, err
	}
	x := &authSavePermsClient{stream}
	return x, nil
}

type Auth_SavePermsClient interface {
	Send(*PermRequest) error
	Recv() (*PermResponse, error)
	grpc.ClientStream
}

type authSavePermsClient struct {
	grpc.ClientStream
}

func (x *authSavePermsClient) Send(m *PermRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *authSavePermsClient) Recv() (*PermResponse, error) {
	m := new(PermResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) DeletePerms(ctx context.Context, in *PermRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/DeletePerms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetUserPerms(ctx context.Context, in *UserPermRequest, opts ...grpc.CallOption) (Auth_GetUserPermsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[6], "/dlib.Auth/GetUserPerms", opts...)
	if err != nil {
		return nil, err
	}
	x := &authGetUserPermsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Auth_GetUserPermsClient interface {
	Recv() (*UserPermResponse, error)
	grpc.ClientStream
}

type authGetUserPermsClient struct {
	grpc.ClientStream
}

func (x *authGetUserPermsClient) Recv() (*UserPermResponse, error) {
	m := new(UserPermResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) SaveUserPerms(ctx context.Context, opts ...grpc.CallOption) (Auth_SaveUserPermsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[7], "/dlib.Auth/SaveUserPerms", opts...)
	if err != nil {
		return nil, err
	}
	x := &authSaveUserPermsClient{stream}
	return x, nil
}

type Auth_SaveUserPermsClient interface {
	Send(*UserPermRequest) error
	Recv() (*UserPermResponse, error)
	grpc.ClientStream
}

type authSaveUserPermsClient struct {
	grpc.ClientStream
}

func (x *authSaveUserPermsClient) Send(m *UserPermRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *authSaveUserPermsClient) Recv() (*UserPermResponse, error) {
	m := new(UserPermResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *authClient) DeleteUserPerms(ctx context.Context, in *UserPermRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/DeleteUserPerms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Login(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Logout(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/dlib.Auth/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	// GetTokens returns a stream of tokens from the database.
	GetTokens(*TokenRequest, Auth_GetTokensServer) error
	// PostTokens serializes a stream of tokens to the database.
	SaveTokens(Auth_SaveTokensServer) error
	// DeleteTokens deletes tokens from the database.
	DeleteTokens(context.Context, *TokenRequest) (*DeleteResponse, error)
	// GetUsers returns a stream of users from the database.
	GetUsers(*UserRequest, Auth_GetUsersServer) error
	// PostUsers serializes a stream of users to the database.
	SaveUsers(Auth_SaveUsersServer) error
	// DeleteUsers deletes users from the database.
	DeleteUsers(context.Context, *UserRequest) (*DeleteResponse, error)
	// GetPerms returns a stream of permissions from the database.
	GetPerms(*PermRequest, Auth_GetPermsServer) error
	// PostPerms serializes a stream of permissions to the database.
	SavePerms(Auth_SavePermsServer) error
	// DeletePerms deletes permissions from the database.
	DeletePerms(context.Context, *PermRequest) (*DeleteResponse, error)
	// GetUserPerms returns a stream of user permissions from the database.
	GetUserPerms(*UserPermRequest, Auth_GetUserPermsServer) error
	// PostUserPerms serializes a stream of user permissions to the database.
	SaveUserPerms(Auth_SaveUserPermsServer) error
	// DeleteUserPerms deletes user permissions from the database.
	DeleteUserPerms(context.Context, *UserPermRequest) (*DeleteResponse, error)
	// Login authenticates a provided user and creates a new token.
	Login(context.Context, *UserRequest) (*TokenResponse, error)
	// Logout destroys the provided token.
	Logout(context.Context, *TokenRequest) (*TokenResponse, error)
	// Auth authenticates a provided token and returns a user value.
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_GetTokens_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TokenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuthServer).GetTokens(m, &authGetTokensServer{stream})
}

type Auth_GetTokensServer interface {
	Send(*TokenResponse) error
	grpc.ServerStream
}

type authGetTokensServer struct {
	grpc.ServerStream
}

func (x *authGetTokensServer) Send(m *TokenResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Auth_SaveTokens_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AuthServer).SaveTokens(&authSaveTokensServer{stream})
}

type Auth_SaveTokensServer interface {
	Send(*TokenResponse) error
	Recv() (*TokenRequest, error)
	grpc.ServerStream
}

type authSaveTokensServer struct {
	grpc.ServerStream
}

func (x *authSaveTokensServer) Send(m *TokenResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *authSaveTokensServer) Recv() (*TokenRequest, error) {
	m := new(TokenRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Auth_DeleteTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/DeleteTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteTokens(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuthServer).GetUsers(m, &authGetUsersServer{stream})
}

type Auth_GetUsersServer interface {
	Send(*UserResponse) error
	grpc.ServerStream
}

type authGetUsersServer struct {
	grpc.ServerStream
}

func (x *authGetUsersServer) Send(m *UserResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Auth_SaveUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AuthServer).SaveUsers(&authSaveUsersServer{stream})
}

type Auth_SaveUsersServer interface {
	Send(*UserResponse) error
	Recv() (*UserRequest, error)
	grpc.ServerStream
}

type authSaveUsersServer struct {
	grpc.ServerStream
}

func (x *authSaveUsersServer) Send(m *UserResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *authSaveUsersServer) Recv() (*UserRequest, error) {
	m := new(UserRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Auth_DeleteUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/DeleteUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteUsers(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetPerms_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PermRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuthServer).GetPerms(m, &authGetPermsServer{stream})
}

type Auth_GetPermsServer interface {
	Send(*PermResponse) error
	grpc.ServerStream
}

type authGetPermsServer struct {
	grpc.ServerStream
}

func (x *authGetPermsServer) Send(m *PermResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Auth_SavePerms_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AuthServer).SavePerms(&authSavePermsServer{stream})
}

type Auth_SavePermsServer interface {
	Send(*PermResponse) error
	Recv() (*PermRequest, error)
	grpc.ServerStream
}

type authSavePermsServer struct {
	grpc.ServerStream
}

func (x *authSavePermsServer) Send(m *PermResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *authSavePermsServer) Recv() (*PermRequest, error) {
	m := new(PermRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Auth_DeletePerms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeletePerms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/DeletePerms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeletePerms(ctx, req.(*PermRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetUserPerms_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserPermRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuthServer).GetUserPerms(m, &authGetUserPermsServer{stream})
}

type Auth_GetUserPermsServer interface {
	Send(*UserPermResponse) error
	grpc.ServerStream
}

type authGetUserPermsServer struct {
	grpc.ServerStream
}

func (x *authGetUserPermsServer) Send(m *UserPermResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Auth_SaveUserPerms_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AuthServer).SaveUserPerms(&authSaveUserPermsServer{stream})
}

type Auth_SaveUserPermsServer interface {
	Send(*UserPermResponse) error
	Recv() (*UserPermRequest, error)
	grpc.ServerStream
}

type authSaveUserPermsServer struct {
	grpc.ServerStream
}

func (x *authSaveUserPermsServer) Send(m *UserPermResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *authSaveUserPermsServer) Recv() (*UserPermRequest, error) {
	m := new(UserPermRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Auth_DeleteUserPerms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserPermRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteUserPerms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/DeleteUserPerms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteUserPerms(ctx, req.(*UserPermRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Logout(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlib.Auth/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dlib.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteTokens",
			Handler:    _Auth_DeleteTokens_Handler,
		},
		{
			MethodName: "DeleteUsers",
			Handler:    _Auth_DeleteUsers_Handler,
		},
		{
			MethodName: "DeletePerms",
			Handler:    _Auth_DeletePerms_Handler,
		},
		{
			MethodName: "DeleteUserPerms",
			Handler:    _Auth_DeleteUserPerms_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Auth_Logout_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _Auth_Auth_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTokens",
			Handler:       _Auth_GetTokens_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SaveTokens",
			Handler:       _Auth_SaveTokens_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetUsers",
			Handler:       _Auth_GetUsers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SaveUsers",
			Handler:       _Auth_SaveUsers_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetPerms",
			Handler:       _Auth_GetPerms_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SavePerms",
			Handler:       _Auth_SavePerms_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetUserPerms",
			Handler:       _Auth_GetUserPerms_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SaveUserPerms",
			Handler:       _Auth_SaveUserPerms_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "ptypes/dlib.proto",
}

func init() { proto.RegisterFile("ptypes/dlib.proto", fileDescriptor_dlib_d3d99ff7dc552fce) }

var fileDescriptor_dlib_d3d99ff7dc552fce = []byte{
	// 762 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x8d, 0x13, 0x27, 0x6d, 0x26, 0x49, 0x7f, 0xb6, 0xfd, 0x2a, 0x2b, 0x37, 0x5f, 0x65, 0xa9,
	0x55, 0x2e, 0x50, 0x52, 0x5a, 0x90, 0x2a, 0xb8, 0xa1, 0x6a, 0xa2, 0xaa, 0xa2, 0xb4, 0xc5, 0x0d,
	0xbd, 0x44, 0x72, 0xc9, 0x10, 0xac, 0xda, 0xb1, 0xb1, 0x37, 0x15, 0x7d, 0x34, 0x5e, 0x80, 0x67,
	0xe0, 0x3d, 0x78, 0x01, 0x34, 0xbb, 0xeb, 0x9f, 0x40, 0x6c, 0x1a, 0xe0, 0x82, 0xbb, 0xfd, 0x99,
	0x39, 0xe7, 0xcc, 0x9c, 0xd9, 0x85, 0xf5, 0x80, 0xdf, 0x07, 0x18, 0xf5, 0x46, 0xae, 0x73, 0xd3,
	0x0d, 0x42, 0x9f, 0xfb, 0x4c, 0xa7, 0x75, 0xfb, 0xff, 0xb1, 0xef, 0x8f, 0x5d, 0xec, 0x89, 0xb3,
	0x9b, 0xe9, 0xfb, 0x1e, 0x77, 0x3c, 0x8c, 0xb8, 0xed, 0x05, 0x32, 0xcc, 0x44, 0x68, 0x0d, 0xc2,
	0xd0, 0x0f, 0x2d, 0x8c, 0x02, 0x7f, 0x12, 0x21, 0x63, 0xa0, 0x1f, 0xfb, 0x23, 0x34, 0xb4, 0x6d,
	0xad, 0x53, 0xb1, 0xc4, 0x9a, 0xad, 0x41, 0xe5, 0x55, 0x34, 0x36, 0xca, 0xdb, 0x5a, 0xa7, 0x6e,
	0xd1, 0x92, 0x75, 0x41, 0x1f, 0x3a, 0x1e, 0x1a, 0x95, 0x6d, 0xad, 0xd3, 0xd8, 0x6f, 0x77, 0x25,
	0x4d, 0x37, 0xa6, 0xe9, 0x0e, 0x63, 0x1a, 0x4b, 0xc4, 0x99, 0x5f, 0x35, 0x68, 0x59, 0x18, 0x4d,
	0x5d, 0x6e, 0xe1, 0xcf, 0x3c, 0xf5, 0x94, 0xe7, 0xda, 0x76, 0x63, 0x9e, 0x6b, 0xdb, 0xa5, 0xa8,
	0xe1, 0x7d, 0x20, 0x79, 0xea, 0x96, 0x58, 0x53, 0xd4, 0xf9, 0xd4, 0x33, 0x74, 0x21, 0x90, 0x96,
	0xb1, 0xbe, 0x6a, 0xaa, 0x6f, 0x07, 0x2a, 0x83, 0x30, 0x34, 0x6a, 0x42, 0xde, 0x46, 0x57, 0xf4,
	0x65, 0xa6, 0x4e, 0x8b, 0xee, 0x09, 0xbe, 0x6f, 0x73, 0xdb, 0x58, 0x92, 0xf0, 0xb4, 0x4e, 0x4a,
	0x5b, 0x7e, 0x60, 0x69, 0x26, 0xac, 0xf4, 0xd1, 0x45, 0x8e, 0x49, 0x0b, 0x95, 0x40, 0x2d, 0x11,
	0x68, 0xbe, 0x84, 0xc6, 0x25, 0x86, 0x9e, 0x85, 0x1f, 0xa7, 0x18, 0x71, 0xb6, 0x02, 0xe5, 0xd3,
	0xbe, 0xba, 0x2f, 0x9f, 0xf6, 0x99, 0x01, 0x4b, 0x57, 0x18, 0xde, 0x39, 0xef, 0x50, 0xd5, 0x1e,
	0x6f, 0x49, 0xe0, 0xb9, 0xed, 0x25, 0xf5, 0xd3, 0xda, 0x3c, 0x83, 0xa6, 0x04, 0x53, 0x74, 0x7f,
	0x86, 0xf6, 0xa5, 0x0c, 0xcd, 0xa1, 0x7f, 0x8b, 0x93, 0x3c, 0x71, 0x9b, 0x50, 0x15, 0xf7, 0x0a,
	0x4c, 0x6e, 0xd8, 0x16, 0xd4, 0xde, 0x44, 0x18, 0x9e, 0xf6, 0x05, 0x58, 0xc5, 0x52, 0x3b, 0xf6,
	0x04, 0x96, 0x8e, 0x43, 0xb4, 0x39, 0x8e, 0x84, 0x41, 0xc5, 0x0d, 0x8c, 0x43, 0x29, 0x6b, 0xf0,
	0x29, 0x70, 0x42, 0x8c, 0x84, 0x89, 0xbf, 0xc8, 0x52, 0xa1, 0x6c, 0x0f, 0xaa, 0x57, 0xdc, 0x0e,
	0xb9, 0xb2, 0xb9, 0x28, 0x47, 0x06, 0xb2, 0x47, 0x50, 0x19, 0x4c, 0x46, 0xc2, 0xee, 0xe2, 0x78,
	0x0a, 0xa3, 0xe8, 0x0b, 0x77, 0xf4, 0x80, 0x41, 0xa0, 0x30, 0xf3, 0xb3, 0x06, 0x2d, 0xd5, 0xc8,
	0x1c, 0x63, 0xfe, 0xd9, 0x4e, 0x9a, 0x3e, 0x34, 0x88, 0x35, 0x6f, 0x04, 0x18, 0xe8, 0x74, 0xad,
	0x74, 0x8b, 0x35, 0x9d, 0x5d, 0xda, 0x51, 0x14, 0xcf, 0x12, 0xad, 0x93, 0xf9, 0xd2, 0xd3, 0xf9,
	0xa2, 0xa2, 0x07, 0x9e, 0xed, 0xb8, 0xea, 0x75, 0xca, 0x8d, 0x19, 0x40, 0x53, 0x12, 0xe6, 0xb4,
	0xea, 0xef, 0x33, 0xbe, 0x86, 0x55, 0x42, 0x29, 0x7a, 0x86, 0xa9, 0x13, 0xe5, 0x19, 0x27, 0xb6,
	0xa0, 0x46, 0x69, 0xa9, 0x43, 0x72, 0x67, 0x5a, 0xb0, 0x96, 0x42, 0xe6, 0x14, 0xb2, 0x28, 0xe6,
	0x5b, 0x68, 0x1c, 0x4d, 0xf9, 0x87, 0x58, 0x62, 0x27, 0x1e, 0x19, 0x4d, 0x98, 0xc9, 0xe4, 0x4f,
	0x96, 0x7d, 0xaf, 0xf1, 0x18, 0xed, 0x80, 0x4e, 0x10, 0x82, 0xa6, 0xb1, 0xbf, 0x2e, 0x03, 0x33,
	0xd5, 0x5a, 0xe2, 0xda, 0x9c, 0x40, 0x53, 0xe2, 0xa7, 0x7a, 0x2f, 0x6e, 0x05, 0xfa, 0xb2, 0x55,
	0xbe, 0xb8, 0x65, 0xbb, 0x99, 0xc6, 0x27, 0x7c, 0x59, 0xab, 0x94, 0x19, 0xbb, 0x8a, 0xae, 0x92,
	0x8d, 0xcb, 0x76, 0x42, 0xf2, 0xed, 0x7f, 0xab, 0x81, 0x4e, 0x84, 0xec, 0x10, 0xea, 0x27, 0xc8,
	0x85, 0xd6, 0x88, 0xcd, 0xa9, 0xa3, 0xbd, 0x31, 0x73, 0x26, 0x41, 0xcc, 0xd2, 0x9e, 0xc6, 0x9e,
	0x03, 0x5c, 0xd9, 0x77, 0xb8, 0x70, 0x6a, 0x47, 0xdb, 0xd3, 0xd8, 0x33, 0x68, 0xca, 0xdf, 0xb9,
	0x20, 0x7d, 0x53, 0x9e, 0xcd, 0xfe, 0xe2, 0x66, 0x89, 0x3d, 0x85, 0xe5, 0x13, 0xe4, 0x54, 0x6e,
	0xc4, 0xd6, 0xb3, 0x9d, 0x90, 0x69, 0x73, 0x9a, 0x23, 0xf4, 0x1e, 0x42, 0x9d, 0xf4, 0x2e, 0x96,
	0x27, 0xc4, 0x1e, 0x42, 0x43, 0x8a, 0xc8, 0xcd, 0x2d, 0x96, 0x4a, 0x1d, 0x4f, 0xd2, 0x32, 0xde,
	0xb7, 0xe7, 0xf8, 0x93, 0x95, 0xba, 0x58, 0xde, 0xac, 0xd4, 0xdc, 0xdc, 0x3c, 0xa9, 0x47, 0xd0,
	0x54, 0x5d, 0x95, 0xa9, 0xff, 0xa5, 0x55, 0x66, 0xd3, 0xb7, 0x7e, 0x3c, 0xce, 0xc8, 0xee, 0x43,
	0x2b, 0xee, 0xf0, 0xef, 0x61, 0x88, 0x12, 0x5e, 0xc0, 0x6a, 0xda, 0xed, 0x42, 0x9c, 0xbc, 0x52,
	0x1e, 0x43, 0xf5, 0xcc, 0x1f, 0x3b, 0x93, 0x79, 0x4e, 0xcd, 0x9f, 0x49, 0x76, 0x00, 0xb5, 0x33,
	0x7f, 0xec, 0x4f, 0xf9, 0x02, 0x83, 0xcc, 0x7a, 0xea, 0x0d, 0x29, 0x9a, 0xcc, 0x07, 0x11, 0x3b,
	0x94, 0x7d, 0xd3, 0x66, 0xe9, 0xb2, 0x74, 0x53, 0x13, 0xdf, 0xfd, 0xc1, 0xf7, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x3a, 0xe5, 0x62, 0x89, 0x1a, 0x0a, 0x00, 0x00,
}
